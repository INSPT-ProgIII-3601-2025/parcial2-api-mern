{
  "info": {
    "name": "Recetorium API",
    "description": "Colección de pruebas para la API REST de Recetorium. Incluye endpoints para recetas, usuarios e ingredientes con operaciones CRUD y métodos específicos.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Recetas",
      "description": "Endpoints para gestionar recetas: obtener lista, detalles, crear, actualizar y eliminar.",
      "item": [
        {
          "name": "Obtener todas las recetas",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/recetas",
              "host": ["{{base_url}}"],
              "path": ["recetas"]
            },
            "description": "Obtiene la lista de todas las recetas con información del autor (nombre y foto). Respuesta esperada: 200 OK con array de recetas."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "    if (jsonData.length > 0) {",
                  "        pm.expect(jsonData[0]).to.have.property('nombre');",
                  "        pm.expect(jsonData[0]).to.have.property('autor_id');",
                  "    }",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Obtener receta por ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/recetas/68cf9ccf44249d829e662c7a",
              "host": ["{{base_url}}"],
              "path": ["recetas", "68cf9ccf44249d829e662c7a"]
            },
            "description": "Obtiene los detalles de una receta específica, incluyendo autor poblado y lista de ingredientes con referencias. Respuesta esperada: 200 OK con objeto receta completo."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has recipe data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('nombre');",
                  "    pm.expect(jsonData).to.have.property('ingredientes');",
                  "    pm.expect(jsonData.ingredientes).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Crear nueva receta",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Nueva Receta\",\n  \"foto\": \"nueva.jpg\",\n  \"instrucciones\": \"Instrucciones de la nueva receta\",\n  \"autor_id\": \"68cf9ccf44249d829e662c92\",\n  \"ingredientes\": [\n    {\n      \"ingrediente_id\": \"68cf9ccf44249d829e662c96\",\n      \"nombre\": \"Harina de trigo\",\n      \"cantidad\": 200,\n      \"unidad_medida\": \"gramo\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/recetas",
              "host": ["{{base_url}}"],
              "path": ["recetas"]
            },
            "description": "Crea una nueva receta. Cuerpo requerido con nombre, instrucciones, autor_id y array de ingredientes. Respuesta esperada: 201 Created con la receta creada."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "pm.test(\"Response has created recipe\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('_id');",
                  "    pm.expect(jsonData).to.have.property('nombre');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Actualizar receta",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"nombre\": \"Receta Actualizada\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/recetas/68cf9ccf44249d829e662c7a",
              "host": ["{{base_url}}"],
              "path": ["recetas", "68cf9ccf44249d829e662c7a"]
            },
            "description": "Actualiza una receta existente. Cuerpo con campos a modificar. Respuesta esperada: 200 OK con la receta actualizada."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has updated recipe\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('nombre');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Eliminar receta",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/recetas/68cf9ccf44249d829e662c7a",
              "host": ["{{base_url}}"],
              "path": ["recetas", "68cf9ccf44249d829e662c7a"]
            },
            "description": "Elimina una receta por ID. Respuesta esperada: 200 OK con mensaje de eliminación."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Usuarios",
      "description": "Endpoints para gestionar usuarios, incluyendo obtener recetas por usuario.",
      "item": [
        {
          "name": "Obtener recetas de un usuario",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/usuarios/68cf9ccf44249d829e662c92/recetas",
              "host": ["{{base_url}}"],
              "path": ["usuarios", "68cf9ccf44249d829e662c92", "recetas"]
            },
            "description": "Obtiene la lista de recetas subidas por un usuario específico. Respuesta esperada: 200 OK con array de recetas del usuario."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has recipes array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Ingredientes",
      "description": "Endpoints para gestionar ingredientes, incluyendo obtener recetas que los contienen.",
      "item": [
        {
          "name": "Obtener todos los ingredientes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/ingredientes",
              "host": ["{{base_url}}"],
              "path": ["ingredientes"]
            },
            "description": "Obtiene la lista de todos los ingredientes disponibles. Respuesta esperada: 200 OK con array de ingredientes."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has ingredients array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Obtener recetas que contienen un ingrediente",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/ingredientes/68cf9ccf44249d829e662c96/recetas",
              "host": ["{{base_url}}"],
              "path": ["ingredientes", "68cf9ccf44249d829e662c96", "recetas"]
            },
            "description": "Obtiene la lista de recetas que incluyen un ingrediente específico. Respuesta esperada: 200 OK con array de recetas."
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "pm.test(\"Response has recipes array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}